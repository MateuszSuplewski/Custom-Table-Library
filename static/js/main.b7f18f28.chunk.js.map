{"version":3,"sources":["context/mainContexts.js","hooks/useColumnsFilter.js","hooks/useGlobalFilter.js","hooks/useSort.js","styled/tableItems/TableCell/TableCell.styled.js","styled/tableItems/TableCell/index.js","styled/tableItems/TableCell/TableCell.js","styled/tableItems/TableRow/TableRow.styled.js","styled/tableItems/TableRow/index.js","styled/tableItems/TableRow/TableRow.js","components/TableBodyPage.js","styled/singleElements/Select/Select.styled.js","styled/singleElements/Select/index.js","styled/singleElements/Select/Select.js","styled/wrappers/PaginationWrapper/PaginationWrapper.styled.js","styled/wrappers/PaginationWrapper/index.js","styled/wrappers/PaginationWrapper/PaginationWrapper.js","styled/singleElements/ClickableIcon/ClickableIcon.styled.js","styled/singleElements/ClickableIcon/index.js","styled/singleElements/ClickableIcon/ClickableIcon.js","components/Pagination.js","styled/wrappers/FilterWrapper/FilterWrapper.styled.js","styled/wrappers/FilterWrapper/index.js","styled/wrappers/FilterWrapper/FilterWrapper.js","styled/singleElements/Input/Input.styled.js","styled/singleElements/Input/Input.js","components/GlobalFilter.js","components/ColumnFilter.js","components/Sorter.js","styled/tableItems/TableHead/TableHead.styled.js","styled/tableItems/TableHead/index.js","styled/tableItems/TableHead/TableHead.js","components/TableHeader.js","components/TableBodyStatus.js","styled/singleElements/Title/Title.styled.js","styled/singleElements/Title/index.js","styled/singleElements/Title/Title.js","styled/wrappers/TableWrapper/TableWrapper.styled.js","styled/wrappers/TableWrapper/index.js","styled/wrappers/TableWrapper/TableWrapper.js","styled/wrappers/HeaderWrapper/HeaderWrapper.styled.js","styled/wrappers/HeaderWrapper/index.js","styled/wrappers/HeaderWrapper/HeaderWrapper.js","styled/tableItems/Table/Table.styled.js","styled/tableItems/Table/index.js","styled/tableItems/Table/Table.js","styled/tableItems/TableBody/TableBody.styled.js","styled/tableItems/TableBody/index.js","styled/tableItems/TableBody/TableBody.js","components/CustomTable.js","containers/CustomTableContainer.js","data/tableData.js","App.js","reportWebVitals.js","index.js"],"names":["paginationContext","React","createContext","globalFilterContext","columnFilterContext","sortContext","displayName","useColumnsFilter","headerData","initialData","colNames","Object","values","reduce","obj","item","field","useState","colFilterPhrases","data","colFilterFields","dataFilteredByColumns","filter","row","every","cell","index","toUpperCase","includes","useGlobalFilter","filterPhrase","setFilterPhrase","filterCell","dataFilteredByPhrase","some","useSort","order","type","sorting","setSorting","sortByNumber","a","b","Number","sortByText","fieldA","fieldB","preparedData","sort","sortedDataByOrder","reverse","DefaultSHeaderCell","styled","th","align","DefaultSDataCell","td","SHeaderCell","style","SDataCell","TableCell","children","otherProps","STableCell","head","DefaultSTableRow","tr","STableRow","TableRow","TableBodyPage","useContext","begin","end","slice","map","rowIndex","rowCellsContent","cellIndex","DefaultSSelect","select","SSelect","Select","value","onChange","options","symbol","DefaultSPaginationWrapper","div","SPaginationWrapper","PaginationWrapper","StyledFontAwesomeIcon","FontAwesomeIcon","size","$isDisabled","css","$isActive","SClickableIcon","icon","onClick","ClickableIcon","isDisabled","isActive","Pagination","dataLength","limit","handleRowsPerPageChange","page","setPage","pages","Math","ceil","faAngleLeft","faAngleRight","e","DefaultSFilterWrapper","SFilterWrapper","FilterWrapper","DefaultSInput","input","SInputContainer","Input","GlobalFilter","handleGlobalFilterChange","minWidth","faMagnifyingGlass","placeholder","faSquareXmark","length","ColumnFilter","columns","handleColFilterChange","width","faGenderless","display","Sorter","isActiveSort","faSortDown","faSortUp","paddingLeft","DefaultSTableHead","thead","STableHead","TableHead","TableHeader","handleSortChange","title","TableBodyStatus","content","maxLength","colSpan","DefaultSTitle","p","STitle","Title","DefaultSTableWrapper","STableWrapper","TableWrapper","DefaultSHeaderWrapper","SHeaderWrapper","HeaderWrapper","DefaultSTable","table","STable","Table","DefaultSTableBody","tbody","STableBody","TableBody","CustomTable","processedData","filtering","padding","CustomTableContainer","initialLimit","applySorting","sortByColumn","filterByPhrase","setColFilterPhrases","filterByColumnsPhrase","setProcessedData","setLimit","useEffect","sortedData","globalFilteredData","columnsFilteredData","Provider","target","clear","prevColFilters","name","code","population","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b7f18f28.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst paginationContext = React.createContext('')\r\nconst globalFilterContext = React.createContext('')\r\nconst columnFilterContext = React.createContext('')\r\nconst sortContext = React.createContext('')\r\n\r\npaginationContext.displayName = 'paginationContext'\r\nglobalFilterContext.displayName = 'globalFilterContext'\r\ncolumnFilterContext.displayName = 'columnFilterContext'\r\nsortContext.displayName = 'sortContext'\r\n\r\nexport { paginationContext, globalFilterContext, columnFilterContext, sortContext }\r\n","import { useState } from 'react'\r\n\r\nconst useColumnsFilter = (headerData, initialData) => {\r\n  const colNames = Object.values(headerData).reduce((obj, item) => {\r\n    return {\r\n      ...obj,\r\n      [item.field]: ''\r\n    }\r\n  }, {})\r\n\r\n  const [colFilterPhrases, setColFilterPhrases] = useState(colNames)\r\n\r\n  const filterByColumnsPhrase = (data = initialData) => {\r\n    const colFilterFields = Object.values(colFilterPhrases)\r\n\r\n    const dataFilteredByColumns = [...data].filter((row) => {\r\n      const rowCellsContent = Object.values(row)\r\n      return rowCellsContent.every((cell, index) => cell.toUpperCase().includes(colFilterFields[index].toUpperCase()))\r\n    })\r\n\r\n    return dataFilteredByColumns\r\n  }\r\n\r\n  return [setColFilterPhrases, colFilterPhrases, filterByColumnsPhrase]\r\n}\r\n\r\nexport default useColumnsFilter\r\n","import { useState } from 'react'\r\n\r\nconst useGlobalFilter = (initialData) => {\r\n  const [filterPhrase, setFilterPhrase] = useState('')\r\n\r\n  const filterCell = (cell) => cell.toUpperCase().includes(filterPhrase.toUpperCase())\r\n\r\n  const filterByPhrase = (data = initialData) => {\r\n    const dataFilteredByPhrase = data.filter((row) => {\r\n      const rowCellsContent = Object.values(row)\r\n      return rowCellsContent.some(filterCell)\r\n    })\r\n    return dataFilteredByPhrase\r\n  }\r\n\r\n  return [filterPhrase, setFilterPhrase, filterByPhrase]\r\n}\r\n\r\nexport default useGlobalFilter\r\n","import { useState } from 'react'\r\n\r\nconst useSort = (initialData) => {\r\n  const [sorting, setSorting] = useState({ field: null, order: null, type: null })\r\n\r\n  const applySorting = (field, type) => {\r\n    if (sorting.field === field) return setSorting({ field: field, order: sorting.order === 'ASC' ? 'DESC' : 'ASC', type: type })\r\n    setSorting({ field: field, order: 'ASC', type: type })\r\n  }\r\n\r\n  const sortByColumn = (data = initialData) => {\r\n    const { field, type, order } = sorting\r\n    if (!field) return data\r\n\r\n    const sortByNumber = (a, b) => Number(a[field]) - Number(b[field])\r\n\r\n    const sortByText = (a, b) => {\r\n      const fieldA = a[field].toUpperCase()\r\n      const fieldB = b[field].toUpperCase()\r\n      if (fieldA < fieldB) return -1\r\n      if (fieldA > fieldB) return 1\r\n      return 0\r\n    }\r\n\r\n    const preparedData = type === 'numeric' ? [...data].sort(sortByNumber) : [...data].sort(sortByText)\r\n    const sortedDataByOrder = order === 'ASC' ? preparedData : preparedData.reverse()\r\n\r\n    return sortedDataByOrder\r\n  }\r\n\r\n  return [applySorting, sorting, sortByColumn]\r\n}\r\n\r\nexport default useSort\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSHeaderCell = styled.th`\r\n  padding: 1rem 1rem 1rem 0.7rem;\r\n  text-align: ${({ align }) => align};\r\n  white-space: nowrap;\r\n  border-bottom: 1px solid black;\r\n  background-color: #e5e5e5;\r\n  cursor: pointer;\r\n`\r\n\r\nconst DefaultSDataCell = styled.td`\r\n  text-align: ${({ align }) => align};\r\n  padding: 0.5rem 0.7rem;\r\n  border-bottom: 1px solid black;\r\n`\r\nconst SHeaderCell = styled(DefaultSHeaderCell)(({ style }) => style)\r\nconst SDataCell = styled(DefaultSDataCell)(({ style }) => style)\r\n\r\nexport { SDataCell, SHeaderCell }\r\n","import TableCell from './TableCell'\r\n\r\nexport default TableCell\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { SDataCell, SHeaderCell } from './TableCell.styled'\r\n\r\nconst TableCell = ({ style, align, type = 'data', children, ...otherProps }) => {\r\n  const cellType = {\r\n    data: SDataCell,\r\n    head: SHeaderCell\r\n  }\r\n  const STableCell = cellType[type]\r\n\r\n  return (\r\n    <STableCell\r\n      style={style}\r\n      align={align}\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </STableCell>\r\n  )\r\n}\r\n\r\nTableCell.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object,\r\n  type: PropTypes.string,\r\n  align: PropTypes.string\r\n}\r\n\r\nexport default TableCell\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTableRow = styled.tr``\r\n\r\nconst STableRow = styled(DefaultSTableRow)(({ style }) => style)\r\n\r\nexport default STableRow\r\n","import TableRow from './TableRow'\r\n\r\nexport default TableRow\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport STableRow from './TableRow.styled'\r\n\r\nconst TableRow = ({ style, children }) => {\r\n  return <STableRow style={style}>{children}</STableRow>\r\n}\r\n\r\nTableRow.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default TableRow\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { paginationContext } from '../context/mainContexts'\r\nimport TableCell from '../styled/tableItems/TableCell'\r\nimport TableRow from '../styled/tableItems/TableRow'\r\n\r\nconst TableBodyPage = ({ data }) => {\r\n  const { begin, end } = React.useContext(paginationContext)\r\n\r\n  return data.slice(begin, end).map((row, rowIndex) => {\r\n    const rowCellsContent = Object.values(row)\r\n    return (\r\n      <TableRow key={rowIndex}>\r\n        {rowCellsContent.map((cell, cellIndex) => (\r\n          <TableCell key={rowIndex + cellIndex}>{cell}</TableCell>\r\n        ))}\r\n      </TableRow>\r\n    )\r\n  })\r\n}\r\n\r\nTableBodyPage.propTypes = {\r\n  data: PropTypes.array.isRequired\r\n}\r\n\r\nexport default TableBodyPage\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSSelect = styled.select`\r\n  outline: none;\r\n  border-radius: 3px;\r\n  border: 1px solid rgba(0, 0, 0, 0.3);\r\n  color: rgba(0, 0, 0, 0.7);\r\n  margin-left: 0.5rem;\r\n  min-width: 50px;\r\n`\r\n\r\nconst SSelect = styled(DefaultSSelect)(({ style }) => style)\r\n\r\nexport default SSelect\r\n","import Select from './Select'\r\n\r\nexport default Select\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SSelect from './Select.styled'\r\n\r\nconst Select = ({ style, value, onChange, options, ...otherProps }) => {\r\n  return (\r\n    <SSelect\r\n      style={style}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...otherProps}\r\n    >\r\n      {options.map((symbol, index) => (\r\n        <option\r\n          key={index}\r\n          value={symbol}\r\n        >\r\n          {symbol}\r\n        </option>\r\n      ))}\r\n    </SSelect>\r\n  )\r\n}\r\n\r\nSelect.propTypes = {\r\n  value: PropTypes.any.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default Select\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSPaginationWrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  white-space: nowrap;\r\n  overflow-x: auto;\r\n  padding: 0 1rem;\r\n  gap: 1rem;\r\n`\r\n\r\nconst SPaginationWrapper = styled(DefaultSPaginationWrapper)(\r\n  ({ style }) => style\r\n)\r\n\r\nexport default SPaginationWrapper\r\n","import PaginationWrapper from './PaginationWrapper'\r\n\r\nexport default PaginationWrapper\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SPaginationWrapper from './PaginationWrapper.styled'\r\n\r\nconst PaginationWrapper = ({ style, children }) => {\r\n  return <SPaginationWrapper style={style}>{children}</SPaginationWrapper>\r\n}\r\n\r\nPaginationWrapper.propTypes = {\r\n  children: PropTypes.node,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default PaginationWrapper\r\n","import styled, { css } from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst StyledFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  font-size: ${({ size }) => size};\r\n  ${({ $isDisabled }) =>\r\n    $isDisabled\r\n      ? css`\r\n          pointer-events: none;\r\n        `\r\n      : css`\r\n          cursor: pointer;\r\n        `};\r\n  ${({ $isActive }) =>\r\n    !$isActive &&\r\n    css`\r\n      opacity: 0.3;\r\n    `}\r\n`\r\n\r\nconst SClickableIcon = ({ icon, onClick, ...otherProps }) => (\r\n  <StyledFontAwesomeIcon\r\n    icon={icon}\r\n    onClick={onClick}\r\n    {...otherProps}\r\n  />\r\n)\r\n\r\nSClickableIcon.propTypes = {\r\n  icon: PropTypes.any,\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport default SClickableIcon\r\n","import ClickableIcon from './ClickableIcon'\r\n\r\nexport default ClickableIcon\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SClickableIcon from './ClickableIcon.styled'\r\n\r\nconst ClickableIcon = ({\r\n  icon,\r\n  onClick,\r\n  isDisabled,\r\n  isActive,\r\n  ...otherProps\r\n}) => {\r\n  return (\r\n    <SClickableIcon\r\n      icon={icon}\r\n      onClick={onClick}\r\n      $isDisabled={isDisabled}\r\n      $isActive={isActive}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nClickableIcon.propTypes = {\r\n  icon: PropTypes.any,\r\n  onClick: PropTypes.func,\r\n  isDisabled: PropTypes.bool,\r\n  isActive: PropTypes.bool\r\n}\r\n\r\nexport default ClickableIcon\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { faAngleRight, faAngleLeft } from '@fortawesome/free-solid-svg-icons'\r\nimport { paginationContext } from '../context/mainContexts'\r\nimport Select from '../styled/singleElements/Select'\r\nimport PaginationWrapper from '../styled/wrappers/PaginationWrapper'\r\nimport ClickableIcon from '../styled/singleElements/ClickableIcon'\r\n\r\nconst Pagination = ({ dataLength, options }) => {\r\n  const { begin, end, limit, handleRowsPerPageChange, page, setPage } = React.useContext(paginationContext)\r\n  const pages = Math.ceil(dataLength / limit)\r\n\r\n  return (\r\n    <PaginationWrapper>\r\n      <ClickableIcon\r\n        data-testid={'pageIcon--prev'}\r\n        icon={faAngleLeft}\r\n        isDisabled={page === 1 || dataLength === 0}\r\n        isActive={page !== 1 && dataLength > 0}\r\n        onClick={() => setPage(page - 1)}\r\n      />\r\n      <ClickableIcon\r\n        data-testid={'pageIcon--next'}\r\n        icon={faAngleRight}\r\n        isDisabled={page === pages || dataLength === 0}\r\n        isActive={page !== pages && dataLength > 0}\r\n        onClick={() => setPage(page + 1)}\r\n      />\r\n      <label>\r\n        {'Rows per page: '}\r\n        <Select\r\n          value={limit}\r\n          onChange={(e) => handleRowsPerPageChange(e)}\r\n          options={options}\r\n        >\r\n        </Select>\r\n      </label>\r\n      <div>\r\n        {`${begin + 1}-${end > dataLength ? dataLength : end} of ${dataLength}`}\r\n      </div>\r\n    </PaginationWrapper>\r\n  )\r\n}\r\n\r\nPagination.propTypes = {\r\n  dataLength: PropTypes.number.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.number).isRequired\r\n}\r\n\r\nexport default Pagination\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSFilterWrapper = styled.div`\r\n  display: flex;\r\n  white-space: nowrap;\r\n  flex-wrap: nowrap;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  border-bottom: 2px solid black;\r\n  width: 225px;\r\n  justify-content: space-between;\r\n  margin: 0 0.5rem;\r\n  max-width: 225px;\r\n  min-width: 100px;\r\n`\r\n\r\nconst SFilterWrapper = styled(DefaultSFilterWrapper)(({ style }) => style)\r\n\r\nexport default SFilterWrapper\r\n","import FilterWrapper from './FilterWrapper'\r\n\r\nexport default FilterWrapper\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SFilterWrapper from './FilterWrapper.styled'\r\n\r\nconst FilterWrapper = ({ style, children }) => {\r\n  return <SFilterWrapper style={style}>{children}</SFilterWrapper>\r\n}\r\n\r\nFilterWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default FilterWrapper\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSInput = styled.input`\r\n  outline: none;\r\n  border: none;\r\n`\r\n\r\nconst SInputContainer = styled(DefaultSInput)(({ style }) => style)\r\n\r\nexport default SInputContainer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SInput from './Input.styled'\r\n\r\nconst Input = ({ style, type = 'text', value, onChange, ...otherProps }) => {\r\n  return (\r\n    <SInput\r\n      style={style}\r\n      type={type}\r\n      value={value}\r\n      onChange={onChange}\r\n      {...otherProps}\r\n    />\r\n  )\r\n}\r\n\r\nInput.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faSquareXmark, faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons'\r\nimport { globalFilterContext } from '../context/mainContexts'\r\nimport ClickableIcon from '../styled/singleElements/ClickableIcon'\r\nimport FilterWrapper from '../styled/wrappers/FilterWrapper'\r\nimport Input from '../styled/singleElements/Input/Input'\r\n\r\nconst GlobalFilter = () => {\r\n  const { handleGlobalFilterChange, filterPhrase } = React.useContext(globalFilterContext)\r\n  return (\r\n    <FilterWrapper style={{ minWidth: 'auto' }}>\r\n      <FontAwesomeIcon\r\n        icon={faMagnifyingGlass}\r\n        data-testid={'filterIcon--search'}\r\n      />\r\n      <Input\r\n        type={'text'}\r\n        onChange={(e) => handleGlobalFilterChange(e)}\r\n        value={filterPhrase}\r\n        placeholder={'Search'}\r\n      />\r\n      <ClickableIcon\r\n        data-testid={'filterIcon--clear'}\r\n        icon={faSquareXmark}\r\n        onClick={(e) => handleGlobalFilterChange(e, true)}\r\n        size={'lg'}\r\n        isActive={filterPhrase.length > 0}\r\n        isDisabled={!(filterPhrase.length > 0)}\r\n      />\r\n    </FilterWrapper>\r\n  )\r\n}\r\n\r\nexport default GlobalFilter\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGenderless } from '@fortawesome/free-solid-svg-icons'\r\nimport { columnFilterContext } from '../context/mainContexts'\r\nimport FilterWrapper from '../styled/wrappers/FilterWrapper'\r\nimport Input from '../styled/singleElements/Input/Input'\r\nimport TableCell from '../styled/tableItems/TableCell'\r\nimport TableRow from '../styled/tableItems/TableRow'\r\n\r\nconst ColumnFilter = ({ columns }) => {\r\n  const { handleColFilterChange, colFilterPhrases } = React.useContext(columnFilterContext)\r\n  return (\r\n    <TableRow>\r\n      {columns.map(({ field }, index) => (\r\n        <TableCell key={index}>\r\n          <FilterWrapper style={{ width: 'auto' }}>\r\n            <FontAwesomeIcon\r\n              icon={faGenderless}\r\n              data-testid={'filterIcon--column'}\r\n              size={'lg'}\r\n            />\r\n            <Input\r\n              value={colFilterPhrases[field]}\r\n              onChange={(e) => handleColFilterChange(e, field)}\r\n              placeholder={'Filter by ' + field}\r\n              style={{ display: 'block', width: '100%' }}\r\n            />\r\n          </FilterWrapper>\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nColumnFilter.propTypes = {\r\n  columns: PropTypes.array.isRequired\r\n}\r\n\r\nexport default ColumnFilter\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { faSortUp, faSortDown } from '@fortawesome/free-solid-svg-icons'\r\nimport ClickableIcon from '../styled/singleElements/ClickableIcon'\r\n\r\nconst Sorter = ({ isActiveSort, order }) => {\r\n  return (\r\n    <ClickableIcon\r\n      data-testid={order === 'DESC' ? 'sortIcon--dsc' : 'sortIcon--asc'}\r\n      icon={order === 'DESC' && isActiveSort ? faSortDown : faSortUp}\r\n      isActive={isActiveSort}\r\n      style={{ paddingLeft: '0.5rem' }}\r\n    />\r\n  )\r\n}\r\n\r\nSorter.propTypes = {\r\n  order: PropTypes.string,\r\n  isActiveSort: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default Sorter\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTableHead = styled.thead``\r\n\r\nconst STableHead = styled(DefaultSTableHead)(({ style }) => style)\r\n\r\nexport default STableHead\r\n","import TableHead from './TableHead'\r\n\r\nexport default TableHead\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport STableHead from './TableHead.styled'\r\n\r\nconst TableHead = ({ style, children }) => {\r\n  return <STableHead style={style}>{children}</STableHead>\r\n}\r\n\r\nTableHead.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default TableHead\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { sortContext } from '../context/mainContexts'\r\nimport Sorter from './Sorter'\r\nimport TableHead from '../styled/tableItems/TableHead'\r\nimport TableRow from '../styled/tableItems/TableRow'\r\nimport TableCell from '../styled/tableItems/TableCell'\r\n\r\nconst TableHeader = ({ columns }) => {\r\n  const { sorting, handleSortChange } = React.useContext(sortContext)\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map(({ title, field, type }, index) => (\r\n          <TableCell\r\n            onClick={() => handleSortChange(field, type)}\r\n            key={index}\r\n            type={'head'}\r\n            align={'left'}\r\n          >\r\n            {title}\r\n            <Sorter\r\n              isActiveSort = {sorting.field === field}\r\n              order={sorting.order}\r\n            />\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nTableHeader.propTypes = {\r\n  columns: PropTypes.array.isRequired\r\n}\r\n\r\nexport default TableHeader\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TableRow from '../styled/tableItems/TableRow'\r\nimport TableCell from '../styled/tableItems/TableCell'\r\n\r\nconst TableBodyStatus = ({ content, maxLength }) => {\r\n  return (\r\n    <TableRow>\r\n      <TableCell\r\n        colSpan={maxLength}\r\n        align={'center'}\r\n      >\r\n        {content}\r\n      </TableCell>\r\n    </TableRow>\r\n  )\r\n}\r\n\r\nTableBodyStatus.propTypes = {\r\n  content: PropTypes.string.isRequired,\r\n  maxLength: PropTypes.number.isRequired\r\n}\r\n\r\nexport default TableBodyStatus\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTitle = styled.p`\r\n  text-align: left;\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin: 0;\r\n`\r\n\r\nconst STitle = styled(DefaultSTitle)(({ style }) => style)\r\n\r\nexport default STitle\r\n","import Title from './Title'\r\n\r\nexport default Title\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport STitle from './Title.styled'\r\n\r\nconst Title = ({ style, content }) => {\r\n  return <STitle style={style}>{content}</STitle>\r\n}\r\n\r\nTitle.propTypes = {\r\n  content: PropTypes.string.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default Title\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTableWrapper = styled.div`\r\n  overflow-x: auto;\r\n  padding: 0.2rem;\r\n`\r\nconst STableWrapper = styled(DefaultSTableWrapper)(({ style }) => style)\r\n\r\nexport { STableWrapper }\r\n","import TableWrapper from './TableWrapper'\r\n\r\nexport default TableWrapper\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { STableWrapper } from './TableWrapper.styled'\r\n\r\nconst TableWrapper = ({ style, children }) => {\r\n  return <STableWrapper style={style}>{children}</STableWrapper>\r\n}\r\n\r\nTableWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default TableWrapper\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSHeaderWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 1rem;\r\n  white-space: nowrap;\r\n  overflow-x: auto;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n`\r\n\r\nconst SHeaderWrapper = styled(DefaultSHeaderWrapper)(({ style }) => style)\r\n\r\nexport default SHeaderWrapper\r\n","import HeaderWrapper from './HeaderWrapper'\r\n\r\nexport default HeaderWrapper\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport SHeaderWrapper from './HeaderWrapper.styled'\r\n\r\nconst HeaderWrapper = ({ style, children }) => {\r\n  return <SHeaderWrapper style={style}>{children}</SHeaderWrapper>\r\n}\r\n\r\nHeaderWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default HeaderWrapper\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTable = styled.table`\r\n  border-collapse: collapse;\r\n  margin: 0.25rem auto;\r\n  width: 100%;\r\n  -webkit-box-shadow: 0px 1px 6px -1px rgba(66, 68, 90, 1);\r\n  -moz-box-shadow: 0px 1px 6px -1px rgba(66, 68, 90, 1);\r\n  box-shadow: 0px 1px 6px -1px rgba(66, 68, 90, 1);\r\n`\r\n\r\nconst STable = styled(DefaultSTable)(({ style }) => style)\r\n\r\nexport default STable\r\n","import Table from './Table'\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport STable from './Table.styled'\r\n\r\nconst Table = ({ style, children }) => {\r\n  return <STable style={style}>{children}</STable>\r\n}\r\n\r\nTable.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default Table\r\n","import styled from 'styled-components'\r\n\r\nconst DefaultSTableBody = styled.tbody``\r\n\r\nconst STableBody = styled(DefaultSTableBody)(({ style }) => style)\r\n\r\nexport default STableBody\r\n","import TableBody from './TableBody'\r\n\r\nexport default TableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport STableBody from './TableBody.styled'\r\n\r\nconst TableBody = ({ style, children }) => {\r\n  return <STableBody style={style}>{children}</STableBody>\r\n}\r\n\r\nTableBody.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  style: PropTypes.object\r\n}\r\n\r\nexport default TableBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TableBodyPage from '../components/TableBodyPage'\r\nimport Pagination from '../components/Pagination'\r\nimport GlobalFilter from '../components/GlobalFilter'\r\nimport ColumnFilter from '../components/ColumnFilter'\r\nimport TableHeader from '../components/TableHeader'\r\nimport TableBodyStatus from '../components/TableBodyStatus'\r\nimport Title from '../styled/singleElements/Title'\r\nimport TableWrapper from '../styled/wrappers/TableWrapper'\r\nimport HeaderWrapper from '../styled/wrappers/HeaderWrapper'\r\nimport Table from '../styled/tableItems/Table'\r\nimport TableBody from '../styled/tableItems/TableBody'\r\n\r\nexport const CustomTable = ({ processedData, columns, title, filtering, options }) => {\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <HeaderWrapper>\r\n        {(filtering === 'globalFilter' || filtering === 'bothFilters') && <GlobalFilter />}\r\n        <Title content={title} />\r\n      </HeaderWrapper>\r\n      <TableWrapper>\r\n        <Table>\r\n          <TableHeader columns={columns} />\r\n          <TableBody>\r\n            {(filtering === 'columnFilter' || filtering === 'bothFilters') && <ColumnFilter columns={columns} />}\r\n            {processedData.length !== 0\r\n              ? <TableBodyPage data={processedData} />\r\n              : <TableBodyStatus\r\n                  content={'No matching data found'}\r\n                  maxLength={columns.length}\r\n                />}\r\n          </TableBody>\r\n        </Table>\r\n      </TableWrapper>\r\n      <Pagination\r\n        dataLength={processedData.length}\r\n        options={options}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nCustomTable.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  processedData: PropTypes.array.isRequired,\r\n  title: PropTypes.string,\r\n  filtering: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.number)\r\n}\r\n\r\nexport default CustomTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { paginationContext, globalFilterContext, columnFilterContext, sortContext } from '../context/mainContexts'\r\nimport useColumnsFilter from '../hooks/useColumnsFilter'\r\nimport useGlobalFilter from '../hooks/useGlobalFilter'\r\nimport useSort from '../hooks/useSort'\r\nimport CustomTable from '../components/CustomTable'\r\n\r\nexport const CustomTableContainer = ({ title, columns, data, initialLimit = 3, filtering = 'bothFilters', options = [1, 2, 3, 5] }) => {\r\n  const [applySorting, sorting, sortByColumn] = useSort(data)\r\n  const [filterPhrase, setFilterPhrase, filterByPhrase] = useGlobalFilter(data)\r\n  const [setColFilterPhrases, colFilterPhrases, filterByColumnsPhrase] = useColumnsFilter(columns, data)\r\n  const [processedData, setProcessedData] = useState(data)\r\n\r\n  const [page, setPage] = useState(1)\r\n  const [limit, setLimit] = useState(initialLimit)\r\n  const begin = (page - 1) * limit\r\n  const end = page * limit\r\n\r\n  useEffect(() => {\r\n    const sortedData = sortByColumn(data)\r\n    let globalFilteredData = []\r\n    let columnsFilteredData = []\r\n    switch (filtering) {\r\n      case 'bothFilters':\r\n        globalFilteredData = filterByColumnsPhrase(sortedData)\r\n        columnsFilteredData = filterByPhrase(globalFilteredData)\r\n        return setProcessedData(columnsFilteredData)\r\n      case 'globalFilter':\r\n        globalFilteredData = filterByPhrase(sortedData)\r\n        return setProcessedData(globalFilteredData)\r\n      case 'columnFilter':\r\n        columnsFilteredData = filterByColumnsPhrase(sortedData)\r\n        return setProcessedData(columnsFilteredData)\r\n      default:\r\n        globalFilteredData = filterByColumnsPhrase(sortedData)\r\n        columnsFilteredData = filterByPhrase(globalFilteredData)\r\n        return setProcessedData(columnsFilteredData)\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [sorting, filterPhrase, colFilterPhrases])\r\n\r\n  const handleSortChange = (field, type) => {\r\n    setPage(1)\r\n    applySorting(field, type)\r\n  }\r\n\r\n  const handleGlobalFilterChange = (e, clear) => {\r\n    setPage(1)\r\n    if (clear) return setFilterPhrase('')\r\n    setFilterPhrase(e.target.value)\r\n  }\r\n\r\n  const handleColFilterChange = (e, field) => {\r\n    setPage(1)\r\n    setColFilterPhrases((prevColFilters) => { return { ...prevColFilters, [field]: e.target.value } })\r\n  }\r\n\r\n  const handleRowsPerPageChange = (e) => {\r\n    setPage(1)\r\n    setLimit(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <paginationContext.Provider value={{ page, setPage, limit, handleRowsPerPageChange, begin, end }}>\r\n      <globalFilterContext.Provider value={{ filterPhrase, handleGlobalFilterChange }}>\r\n        <columnFilterContext.Provider value={{ colFilterPhrases, handleColFilterChange }}>\r\n          <sortContext.Provider value={{ sorting, handleSortChange }}>\r\n            <CustomTable\r\n              processedData={processedData}\r\n              columns={columns}\r\n              title={title}\r\n              filtering={filtering}\r\n              options={options}\r\n            />\r\n          </sortContext.Provider>\r\n        </columnFilterContext.Provider>\r\n      </globalFilterContext.Provider>\r\n    </paginationContext.Provider>\r\n  )\r\n}\r\n\r\nCustomTableContainer.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n  title: PropTypes.string,\r\n  initialLimit: PropTypes.number,\r\n  filtering: PropTypes.string,\r\n  options: PropTypes.arrayOf(PropTypes.number)\r\n}\r\n\r\nexport default CustomTableContainer\r\n","const columns = [\r\n  {\r\n    title: 'Country Name',\r\n    field: 'name'\r\n  },\r\n  {\r\n    title: 'ISO Code',\r\n    field: 'code'\r\n  },\r\n  {\r\n    title: 'Population',\r\n    field: 'population',\r\n    type: 'numeric'\r\n  },\r\n  {\r\n    title: 'Size',\r\n    field: 'size',\r\n    type: 'numeric'\r\n  }\r\n]\r\n\r\nconst data = [\r\n  {\r\n    name: 'India',\r\n    code: 'IN',\r\n    population: '1402228175',\r\n    size: '3287000'\r\n  },\r\n  {\r\n    name: 'China',\r\n    code: 'CN',\r\n    population: '1448314408',\r\n    size: '9806391'\r\n  },\r\n  {\r\n    name: 'Italy',\r\n    code: 'IT',\r\n    population: '60461826',\r\n    size: '301323'\r\n  },\r\n  {\r\n    name: 'Canada',\r\n    code: 'CA',\r\n    population: '37742154',\r\n    size: '9976137'\r\n  },\r\n  {\r\n    name: 'Australia',\r\n    code: 'AU',\r\n    population: '25499884',\r\n    size: '7682557'\r\n  },\r\n  {\r\n    name: 'Cyprus',\r\n    code: 'CY',\r\n    population: '1207359',\r\n    size: '9251'\r\n  },\r\n  {\r\n    name: 'Egypt',\r\n    code: 'EG',\r\n    population: '102334404',\r\n    size: '1001450'\r\n  },\r\n  {\r\n    name: 'France',\r\n    code: 'FR',\r\n    population: '547030',\r\n    size: '65273511'\r\n  },\r\n  {\r\n    name: 'Poland',\r\n    code: 'PL',\r\n    population: '37846611',\r\n    size: '312685'\r\n  },\r\n  {\r\n    name: 'New Zealand',\r\n    code: 'NZ',\r\n    population: '4822233',\r\n    size: '270534'\r\n  },\r\n  {\r\n    name: 'Peru',\r\n    code: 'PE',\r\n    population: '32933835',\r\n    size: '1285216'\r\n  },\r\n  {\r\n    name: 'Spain',\r\n    code: 'ES',\r\n    population: '46754778',\r\n    size: '504842'\r\n  }\r\n]\r\n\r\nexport { columns, data }\r\n","import React from 'react'\r\nimport CustomTableContainer from './containers/CustomTableContainer'\r\nimport { columns, data } from './data/tableData'\r\n\r\nconst App = () => {\r\n  return (\r\n    <CustomTableContainer\r\n      title={'Basic example of table'}\r\n      columns={columns}\r\n      data={data}\r\n      initialLimit={3}\r\n      filtering={'bothFilters'}\r\n      options={[1, 2, 3, 5]}\r\n    />\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry)\r\n      getFID(onPerfEntry)\r\n      getFCP(onPerfEntry)\r\n      getLCP(onPerfEntry)\r\n      getTTFB(onPerfEntry)\r\n    })\r\n  }\r\n}\r\n\r\nexport default reportWebVitals\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\nimport './index.css'\r\nimport reportWebVitals from './reportWebVitals'\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals()\r\n"],"sourceRoot":""}